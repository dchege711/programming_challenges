<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!--
      `Exe` `OutputType` creates a console application. If not specified, we'd
      create a code library instead.

      [1]: https://learn.microsoft.com/en-us/visualstudio/msbuild/common-msbuild-project-properties
    -->
    <OutputType>Exe</OutputType>

    <TargetFramework>net9.0</TargetFramework>

    <!--
      For Console applications, System, System.IO, System.Collections.Generic,
      System.Linq, System.Net.Http, System.Threading, and System.Threading.Tasks
      have their `using` directives implicitly included.

      [1]: https://aka.ms/new-console-template
    -->
    <ImplicitUsings>enable</ImplicitUsings>

    <!--
      With nullable reference types, one can use `string?` to express the intent
      that sometimes we have a `string` object, and other times we have no value
      (`null`). This is a clearer intent than using a sentinel value like
      `string.Empty` for cases when we have no value.

      [1]: https://learn.microsoft.com/en-us/dotnet/csharp/tutorials/nullable-reference-types
    -->
    <Nullable>enable</Nullable>
  </PropertyGroup>

</Project>
